{
  "name": "clustrap",
  "version": "0.3.2",
  "description": "node.js's cluster module bootstrapped with common use case",
  "main": "main.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jmonster/node-clustrap.git"
  },
  "keywords": [
    "node",
    "node.js",
    "cluster"
  ],
  "author": {
    "name": "Johnny Domino",
    "email": "jvdomino@gmail.com"
  },
  "license": "MIT",
  "dependencies": {
    "colors": "~0.6.2"
  },
  "readme": "node-clustrap\n=============\n\nnode.js's cluster module bootstrapped for common use case\n\n## example 1\n```javascript\nvar clustrap = require('clustrap')\n\nvar c = new clustrap(app, {\n  workers:2,\n  logger:winston,\n  port:3000,\n  sock:'/tmp/app.sock'\n})\n\n// put at the top of your connect/express middleware\napp.use(c.domainMiddleware)\n\nc.listen()\n```\n\n## example 2\n```javascript\nvar clustrap = require('clustrap')\napp.set('port',3000)\nvar c = new clustrap(app)\n\n// put at the top of your connect/express middleware\napp.use(c.domainMiddleware)\n\nc.listen()\n```\n\n## example 3\nYou can disable cluster by specifying `0` workers\n```javascript\nvar clustrap = require('clustrap')\n\nvar c = new clustrap(app, {\n  workers:false || 0,\n})\n\n// put at the top of your connect/express middleware\napp.use(c.domainMiddleware)\n\nc.listen()\n```",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jmonster/node-clustrap/issues"
  },
  "_id": "clustrap@0.3.2",
  "dist": {
    "shasum": "e1469874ce054df08eec3497d95fde4462fe3b78"
  },
  "_from": "https://github.com/jmonster/node-clustrap/archive/v0.3.2.tar.gz",
  "_resolved": "https://github.com/jmonster/node-clustrap/archive/v0.3.2.tar.gz"
}
